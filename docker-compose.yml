services:
  # Service API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: iven-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      # Variables de base de données
      - DB_HOST=${DB_HOST_PROD}
      - DB_USER=${DB_USER_PROD}
      - DB_PASSWORD=${DB_PASSWORD_PROD}
      - DB_NAME=${DB_NAME_PROD} 
      # Variables JWT et autres
      - JWT_SECRET=${JWT_SECRET}
      - MONGO_URI=${MONGO_URI}
      # Variables SMTP/Email
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_SECURE=${SMTP_SECURE}
      - SMTP_FROM=${SMTP_FROM}
      - FRONTEND_URL=${FRONTEND_URL}
    depends_on:
      - db
      - mongo
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    networks:
      - iven-network

  # Service Base de données MySQL (non exposé publiquement)
  db:
    image: mysql:8.0
    container_name: iven-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD_PROD}
      - MYSQL_DATABASE=${DB_NAME_PROD}
      - MYSQL_USER=${DB_USER_PROD}
      - MYSQL_PASSWORD=${DB_PASSWORD_PROD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - iven-network
    command: --default-authentication-plugin=mysql_native_password

  # Service MongoDB (non exposé publiquement)
  mongo:
    image: mongo:6
    container_name: iven-mongo
    restart: unless-stopped
    volumes:
      - mongo_data:/data/db
    networks:
      - iven-network

volumes:
  mysql_data:
  mongo_data:
  uploads_data:
  logs_data:

networks:
  iven-network:
    driver: bridge
